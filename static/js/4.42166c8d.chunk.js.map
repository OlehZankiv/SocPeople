{"version":3,"sources":["components/component/common/Fields/Field.jsx","components/component/common/Fields/Field.module.css","utils/validators/validators.js","assets/images/user.png","components/component/Profile/ProfileInfo/ProfileInfo.module.css","hoc/withAuthRedirect.js","assets/images/settings.png","components/component/Profile/ProfileInfo/Status/Status.module.css","assets/images/download.png","components/component/Profile/MyPost/Post/Post.module.css","components/component/Profile/MyPost/MyPosts.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/component/Profile/ProfileInfo/Status/StatusHook.jsx","components/component/Profile/ProfileInfo/ProfileData.jsx","components/component/Profile/ProfileInfo/ProfileForm.jsx","components/component/Profile/ProfileInfo/ProfileInfo.jsx","components/component/Profile/MyPost/Post/Post.jsx","components/component/Profile/MyPost/MyPosts.jsx","components/component/Profile/MyPost/MyPostsContainer.jsx","components/component/Profile/Profile.jsx","components/component/Profile/ProfileContainer.jsx"],"names":["FieldWithError","hasError","meta","classStyle","props","className","s","children","errorInfo","error","Textarea","input","touched","cn","errorField","Input","CreateField","type","name","placeholder","validate","component","labelText","module","exports","required","value","maxLength","length","mapStateToPropsForAuth","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","StatusHook","status","updateStatus","userId","isOwner","useState","isActiveStatus","changeActive","userStatus","changeLocalStatus","useEffect","statusWrapper","inputStatus","onChange","e","currentTarget","autoFocus","onBlur","hoverSpan","onClick","ProfileData","profile","setAvatar","profileInfoWrapper","avatar","src","photos","large","user","alt","inputFileWrapper","inputFile","id","target","files","htmlFor","download","descrWrapper","lookingForAJob","searchJob","jobDescr","lookingForAJobDescription","wrapperName","aboutMe","fullName","Contact","contactName","contact","contactNameForm","ProfileReduxForm","reduxForm","form","errors","handleSubmit","allContacts","keys","contacts","map","key","settingsProfileError","onSubmit","settingsProfileErrors","descrWrapperForm","searchJobForm","wrapperAboutMe","wrapperNameForm","contactsForm","saveSettings","contactLink","href","ProfileInfo","setProfileData","editMode","setEditMode","Loader","wrapper_avatar","img_head","initialValues","formData","then","settings","settingsLogo","Post","message","likeCount","post","post_info","post_descr","like","maxLengthValidate","PostReduxForm","new_post","btn_ens","MyPosts","memo","addPost","posts","old_posts","MyPostsContainer","allPosts","Profile","Fragment","ProfileContainer","updateUser","match","params","setUserProfile","getUserStatus","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/4.42166c8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./Field.module.css\";\r\nimport { Field } from \"redux-form\";\r\nimport cn from \"classnames\"\r\n\r\nconst FieldWithError = ({ hasError, meta, classStyle, ...props }) => {\r\n    return (\r\n        <div className={s[classStyle]}>\r\n            {props.children}\r\n            {hasError && <span className={s.errorInfo}>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <FieldWithError\r\n            hasError={hasError}\r\n            meta={meta}\r\n            classStyle=\"textAreaWrapper\"\r\n        >\r\n            <textarea\r\n                {...input}\r\n                {...props}\r\n                className={ cn({ [s.errorField]: hasError})}\r\n            />\r\n        </FieldWithError>\r\n    );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <FieldWithError\r\n            hasError={hasError}\r\n            meta={meta}\r\n            classStyle=\"inputWrapper\"\r\n        >\r\n            <input\r\n                {...input}\r\n                {...props}\r\n                className={cn({[s.errorField] : hasError})}\r\n            />\r\n        </FieldWithError>\r\n    );\r\n};\r\n\r\nexport const CreateField = (className, type, name, placeholder, validate, component, labelText) => (\r\n    <div className={s[className]}>\r\n        <Field type={type} name={name} placeholder={placeholder}\r\n            validate={validate} component={component} />\r\n        {labelText && <label>{labelText}</label>}\r\n    </div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorField\":\"Field_errorField__2KsUJ\",\"errorInfo\":\"Field_errorInfo__3IhA1\",\"textAreaWrapper\":\"Field_textAreaWrapper__21fgV\",\"inputWrapper\":\"Field_inputWrapper__3M01m\",\"passInput\":\"Field_passInput__kA2Lo\",\"rememberMe\":\"Field_rememberMe__3S1-H\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required!\";\r\n};\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/user.a4096e53.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img_head\":\"ProfileInfo_img_head__1-TwX\",\"wrapper_avatar\":\"ProfileInfo_wrapper_avatar__UvIKz\",\"avatar\":\"ProfileInfo_avatar__2ba6H\",\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__2ocTV\",\"descrWrapper\":\"ProfileInfo_descrWrapper__1zbeP\",\"name\":\"ProfileInfo_name__jb8RH\",\"wrapperName\":\"ProfileInfo_wrapperName__3Hijo\",\"status\":\"ProfileInfo_status__2WTzD\",\"searchJob\":\"ProfileInfo_searchJob__3JxNc\",\"jobDescr\":\"ProfileInfo_jobDescr__d_N1-\",\"inputFile\":\"ProfileInfo_inputFile__3lra9\",\"inputFileWrapper\":\"ProfileInfo_inputFileWrapper__2CeYa\",\"contacts\":\"ProfileInfo_contacts__d5rw8\",\"contactName\":\"ProfileInfo_contactName__1__Zr\",\"contact\":\"ProfileInfo_contact__oLGCY\",\"settingsLogo\":\"ProfileInfo_settingsLogo__23GaU\",\"saveSettings\":\"ProfileInfo_saveSettings__3usxP\",\"contactsForm\":\"ProfileInfo_contactsForm__2i6vt\",\"descrWrapperForm\":\"ProfileInfo_descrWrapperForm__3aQg0\",\"searchJobForm\":\"ProfileInfo_searchJobForm__1Oqk-\",\"settingsProfileErrors\":\"ProfileInfo_settingsProfileErrors__3I3Ej\"};","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForAuth = ({ auth }) => ({\r\n    isAuth: auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let withRedirect = connect(mapStateToPropsForAuth)(RedirectComponent);\r\n    return withRedirect;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/settings.bd1869a2.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__2dAEz\",\"hoverSpan\":\"Status_hoverSpan__3zeQ3\",\"inputStatus\":\"Status_inputStatus__1EIdE\"};","module.exports = __webpack_public_path__ + \"static/media/download.f918d561.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2Uglz\",\"post_descr\":\"Post_post_descr__2FseL\",\"post_info\":\"Post_post_info__eBuec\",\"like\":\"Post_like__159DB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1wm11\",\"btn_ens\":\"MyPosts_btn_ens__1Qe0V\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from \"react\";\r\nimport s from \"./Status.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nlet StatusHook = ({ status, updateStatus, userId, isOwner }) => {\r\n    let [isActiveStatus, changeActive] = useState(false);\r\n    let [userStatus, changeLocalStatus] = useState(status);\r\n\r\n    useEffect(() => {\r\n        changeLocalStatus(status);\r\n    }, [status]);\r\n\r\n    let activateEditMode = () => {\r\n        isOwner && changeActive(true);\r\n    };\r\n\r\n    let deActivateEditMode = () => {\r\n        changeActive(false);\r\n        if (userStatus !== status && userStatus !== \"\") {\r\n            updateStatus(userStatus, userId);\r\n        }\r\n    };\r\n\r\n    let changeStatus = (e) => {\r\n        changeLocalStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={s.statusWrapper}>\r\n            {!isActiveStatus ? (\r\n                <div className={s.status}>\r\n                    <span className={cn({ [s.hoverSpan]: isOwner })} onClick={activateEditMode}>\r\n                        {status || \"status is absent\"}\r\n                    </span>\r\n                </div>\r\n            ) : (\r\n                <div className={s.inputStatus}>\r\n                    <input onChange={changeStatus} autoFocus onBlur={deActivateEditMode} type=\"text\" value={userStatus} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusHook;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport user from \"../../../../assets/images/user.png\";\r\nimport StatusHook from \"./Status/StatusHook\";\r\nimport download from \"../../../../assets/images/download.png\";\r\nimport cn from \"classnames\";\r\n\r\nconst ProfileData = ({ profile, status, updateStatus, setAvatar, isOwner }) => {\r\n    const setNewAvatar = (e) => {\r\n        if (e.target.files.length === 1) {\r\n            setAvatar(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.profileInfoWrapper}>\r\n            <div className={s.avatar}>\r\n                <img src={profile.photos.large || user} alt=\"avatar\" />\r\n                {isOwner && (\r\n                    <div className={s.inputFileWrapper}>\r\n                        <input\r\n                            type=\"file\"\r\n                            className={s.inputFile}\r\n                            id=\"file\"\r\n                            onChange={setNewAvatar}\r\n                        />\r\n                        <label htmlFor=\"file\">\r\n                            <img src={download} alt=\"download\" />\r\n                        </label>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={s.descrWrapper}>\r\n                {profile.lookingForAJob ? (\r\n                    <div className={s.searchJob}>\r\n                        <img\r\n                            src=\"https://logos.textgiraffe.com/logos/logo-name/Job-designstyle-kiddo-m.png\"\r\n                            alt=\"job\"\r\n                        ></img>\r\n                        <div className={s.jobDescr}>\r\n                            {profile.lookingForAJobDescription}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className={cn(s.searchJob, s.jobDescr)}>\r\n                        \"РАБОТА НЕ ТРЕБУЕТСЯ\"\r\n                    </div>\r\n                )}\r\n                <div className={s.wrapperName}>\r\n                    <div>{profile.aboutMe}</div>\r\n                    <div className={s.name}>{profile.fullName}</div>\r\n                    <StatusHook\r\n                        userId={profile.userId}\r\n                        updateStatus={updateStatus}\r\n                        status={status}\r\n                        isOwner={isOwner}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileData;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport user from \"../../../../assets/images/user.png\";\r\nimport { CreateField, Input } from \"../../common/Fields/Field\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport cn from \"classnames\";\r\n\r\nconst ProfileForm = ({ profile, handleSubmit, error }) => {\r\n    let allContacts = Object.keys(profile.contacts).map((contact, i) => <Contact key={i} contactName={contact} />);\r\n\r\n    let errors;\r\n\r\n    if (error) {\r\n        errors = error.map((error, i) => (\r\n            <div className={s.settingsProfileError} key={i}>\r\n                {error}\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <form className={s.profileInfoWrapper} onSubmit={handleSubmit}>\r\n            <div className={s.avatar}>\r\n                <img src={profile.photos.large || user} alt=\"avatar\" />\r\n                {error && <div className={s.settingsProfileErrors}>{errors}</div>}\r\n            </div>\r\n            <div className={cn(s.descrWrapper, s.descrWrapperForm)}>\r\n                <div className={cn(s.searchJob, s.searchJobForm)}>\r\n                    {CreateField(\"rememberMe\", \"checkbox\", \"lookingForAJob\", null, null, \"input\", \"do you looking a job?\")}\r\n                    <div className={s.jobDescr}>\r\n                        <span>Looking for a job description: </span>\r\n                        {CreateField(\"emailInput\", \"text\", \"lookingForAJobDescription\", \"Your description\", null, Input)}\r\n                    </div>\r\n                </div>\r\n                <div className={s.wrapperAboutMe}>\r\n                    <div className={s.aboutMe}>About me:</div>\r\n                    {CreateField(\"emailInput\", \"text\", \"aboutMe\", \"What about you?\", null, Input)}\r\n                </div>\r\n                <div className={s.wrapperNameForm}>\r\n                    <div className={s.name}>Name:</div>\r\n                    {CreateField(\"emailInput\", \"text\", \"fullName\", \"Your Name\", null, Input)}\r\n                </div>\r\n            </div>\r\n            <div className={s.contactsForm}>{allContacts}</div>\r\n            <button className={s.saveSettings}>SAVE</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst Contact = ({ contactName }) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <span className={s.contactNameForm}>{contactName + \": \"}</span>\r\n            {CreateField(\"emailInput\", \"text\", \"contacts.\" + contactName, contactName, null, Input)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileReduxForm = reduxForm({ form: \"profileForm\" })(ProfileForm);\r\nexport default ProfileReduxForm;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Loader from \"../../common/Loader\";\r\nimport settings from \"../../../../assets/images/settings.png\";\r\nimport { useState } from \"react\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileReduxForm from \"./ProfileForm\";\r\n\r\nconst ProfileInfo = ({\r\n    profile,\r\n    status,\r\n    updateStatus,\r\n    setAvatar,\r\n    isOwner,\r\n    setProfileData,\r\n}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Loader />;\r\n    }\r\n\r\n    let allContacts = Object.keys(profile.contacts).map((contact, i) => (\r\n        <Contact\r\n            key={i}\r\n            contactName={contact}\r\n            contactLink={profile.contacts[contact]}\r\n        />\r\n    ));\r\n\r\n    const onSubmitProfileForm = (formData) => {\r\n        setProfileData(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    };\r\n\r\n    const toggleEditMode = () => {\r\n        if (editMode) {\r\n            setEditMode(false);\r\n        } else {\r\n            setEditMode(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper_avatar}>\r\n            <div className={s.img_head}></div>\r\n            {editMode ? (\r\n                <ProfileReduxForm\r\n                    initialValues={profile}\r\n                    profile={profile}\r\n                    onSubmit={onSubmitProfileForm}\r\n                />\r\n            ) : (\r\n                <ProfileData\r\n                    profile={profile}\r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                    setAvatar={setAvatar}\r\n                    isOwner={isOwner}\r\n                />\r\n            )}\r\n            {isOwner && (\r\n                <img\r\n                    src={settings}\r\n                    alt=\"settings\"\r\n                    className={s.settingsLogo}\r\n                    onClick={() => {\r\n                        toggleEditMode();\r\n                    }}\r\n                />\r\n            )}\r\n            <div className={s.contacts}>{allContacts}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Contact = ({ contactName, contactLink }) => {\r\n    if (contactLink) {\r\n        return (\r\n            <div className={s.contact}>\r\n                <a className={s.contactName} href={contactLink}>\r\n                    {contactName}\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n    return <div></div>;\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = ({message, likeCount}) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.post_info}>\r\n                <img\r\n                    src=\"https://lastfm.freetls.fastly.net/i/u/770x0/140ab88fbc27abfda6001d33718a52db.webp#140ab88fbc27abfda6001d33718a52db\"\r\n                    alt=\"avatar\"\r\n                />\r\n                <div className={s.post_descr}>{message}</div>\r\n            </div>\r\n            <div className={s.like}>\r\n                {likeCount}\r\n                <img src=\"http://pngimg.com/uploads/like/like_PNG90.png\" alt=\"like\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { maxLength } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/Fields/Field\";\r\n\r\nlet maxLengthValidate = maxLength(500);\r\nconst PostForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.new_post}>\r\n            <Field\r\n                validate={[maxLengthValidate]}\r\n                name=\"post\"\r\n                component={Textarea}\r\n                placeholder=\"Enter post\"\r\n            />\r\n            <div className={s.btn_ens}>\r\n                <button>SEND</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: \"postForm\" })(PostForm);\r\n\r\nconst MyPosts = React.memo(({ addPost, posts }) => {\r\n    let addUserPost = ({ post }) => {\r\n        addPost(post);\r\n    };\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <PostReduxForm onSubmit={addUserPost} />\r\n            <div className={s.old_posts}>{posts}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport { addPostActionCreator as addPost } from \"../../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet MapStateToProps = ({ profile }) => {\r\n    let posts = profile.posts.allPosts.map((post) => (\r\n        <Post {...post} key={post.id} />\r\n    ));\r\n\r\n    return {\r\n        posts: posts,\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(MapStateToProps, {\r\n    addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\r\n\r\nconst Profile = ({ status, updateStatus, profile, setAvatar, isOwner, setProfileData }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <ProfileInfo\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                profile={profile}\r\n                setAvatar={setAvatar}\r\n                isOwner={isOwner}\r\n                setProfileData={setProfileData}\r\n            />\r\n            <MyPostsContainer />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    setUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    setAvatar,\r\n    setProfileData,\r\n} from \"../../../redux/profile_reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    updateUser = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        this.props.setUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateUser();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.updateUser();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                setAvatar={this.props.setAvatar}\r\n                setProfileData={this.props.setProfileData}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = ({ profile, auth }) => {\r\n    return {\r\n        profile: profile.profile,\r\n        status: profile.status,\r\n        userId: auth.userId,\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserStatus,\r\n        updateStatus,\r\n        setAvatar,\r\n        setProfileData,\r\n    }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}