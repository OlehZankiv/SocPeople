{"version":3,"sources":["utils/validators/validators.js","components/component/common/Fields/Field.jsx","components/component/common/Fields/Field.module.css","components/component/Login/Login.module.css","components/component/Login/Login.jsx","components/component/Login/LoginContainer.jsx"],"names":["required","value","maxLength","length","FieldWithError","hasError","meta","classStyle","props","className","s","children","errorInfo","error","Textarea","input","touched","errorField","Input","CreateField","type","name","placeholder","validate","component","labelText","module","exports","LoginReduxForm","reduxForm","form","handleSubmit","loginForm","onSubmit","errorWrapper","Login","isAuth","userLogin","to","loginFormWrapper","formData","email","password","rememberMe","connect","auth"],"mappings":"4GAAA,oEAAO,IAAMA,EAAW,SAACC,GACrB,IAAIA,EACJ,MAAO,sBAGEC,EAAY,SAACA,GAAD,OAAe,SAACD,GACrC,GAAIA,GAASA,EAAME,OAASD,EACxB,MAAM,iBAAN,OAAwBA,EAAxB,e,+LCHFE,EAAiB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAeC,EAAY,gDACjE,OACI,yBAAKC,UAAWC,IAAEH,IACbC,EAAMG,SACNN,GAAY,0BAAMI,UAAWC,IAAEE,WAAYN,EAAKO,SAKhDC,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOT,EAAqB,EAArBA,KAASE,EAAY,gCAC7CH,EAAWC,EAAKO,OAASP,EAAKU,QAEpC,OACI,kBAACZ,EAAD,CACIC,SAAUA,EACVC,KAAMA,EACNC,WAAW,mBAEX,8CACQQ,EACAP,EAFR,CAGIC,UAAWJ,EAAWK,IAAEO,WAAa,QAMxCC,EAAQ,SAAC,GAA+B,IAA7BH,EAA4B,EAA5BA,MAAOT,EAAqB,EAArBA,KAASE,EAAY,gCAC1CH,EAAWC,EAAKO,OAASP,EAAKU,QAEpC,OACI,kBAACZ,EAAD,CACIC,SAAUA,EACVC,KAAMA,EACNC,WAAW,gBAEX,2CACQQ,EACAP,EAFR,CAGIC,UAAWJ,EAAWK,IAAEO,WAAa,QAMxCE,EAAc,SAACV,EAAWW,EAAMC,EAAMC,EAAaC,EAAUC,EAAWC,GAA1D,OACvB,yBAAKhB,UAAWC,IAAED,IACd,kBAAC,IAAD,CAAOW,KAAMA,EAAMC,KAAMA,EAAMC,YAAaA,EACxCC,SAAUA,EAAUC,UAAWA,IAClCC,GAAa,+BAAQA,M,oBCpD9BC,EAAOC,QAAU,CAAC,WAAa,0BAA0B,UAAY,yBAAyB,gBAAkB,+BAA+B,aAAe,4BAA4B,UAAY,yBAAyB,WAAa,4B,oBCA5OD,EAAOC,QAAU,CAAC,iBAAmB,gCAAgC,UAAY,yBAAyB,aAAe,8B,wICqBnHC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAdL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAclB,EAAY,EAAZA,MAC/B,OACI,0BAAMJ,UAAWC,IAAEsB,UAAWC,SAAUF,GACnClB,GAAS,yBAAKJ,UAAWC,IAAEwB,cAAerB,GAC1CM,YAAY,aAAc,QAAS,QAAS,SAAUnB,IAAUkB,KAChEC,YAAY,YAAa,WAAY,WAAY,WAAYnB,IAAUkB,KACvEC,YAAY,aAAc,WAAY,aAAc,KAAM,KAAM,QAAS,gBAC1E,6BACI,8CAyBDgB,EAjBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAOpB,OAAOD,EACH,kBAAC,IAAD,CAAUE,GAAG,aAEb,yBAAK7B,UAAWC,IAAE6B,kBACd,qCACA,kBAACX,EAAD,CAAgBK,SAVF,SAACO,GAAc,IAAD,iBACWA,GAArCC,EAD0B,EAC1BA,MAAOC,EADmB,EACnBA,SAAUC,EADS,EACTA,WACvBN,EAAUI,EAAOC,EAAUC,QCfpBC,uBAJO,SAAC,GAAD,MAAe,CACjCR,OADkB,EAAGS,KACRT,UAGuB,CAAEC,eAA3BO,EARQ,SAAC,GAA2B,IAAzBR,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC9B,OAAO,kBAAC,EAAD,CAAOD,OAAQA,EAAQC,UAAWA","file":"static/js/7.f1631af1.chunk.js","sourcesContent":["export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required!\";\r\n};\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Field.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FieldWithError = ({ hasError, meta, classStyle, ...props }) => {\r\n    return (\r\n        <div className={s[classStyle]}>\r\n            {props.children}\r\n            {hasError && <span className={s.errorInfo}>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <FieldWithError\r\n            hasError={hasError}\r\n            meta={meta}\r\n            classStyle=\"textAreaWrapper\"\r\n        >\r\n            <textarea\r\n                {...input}\r\n                {...props}\r\n                className={hasError ? s.errorField : \"\"}\r\n            />\r\n        </FieldWithError>\r\n    );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <FieldWithError\r\n            hasError={hasError}\r\n            meta={meta}\r\n            classStyle=\"inputWrapper\"\r\n        >\r\n            <input\r\n                {...input}\r\n                {...props}\r\n                className={hasError ? s.errorField : \"\"}\r\n            />\r\n        </FieldWithError>\r\n    );\r\n};\r\n\r\nexport const CreateField = (className, type, name, placeholder, validate, component, labelText) => (\r\n    <div className={s[className]}>\r\n        <Field type={type} name={name} placeholder={placeholder}\r\n            validate={validate} component={component} />\r\n        {labelText && <label>{labelText}</label>}\r\n    </div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorField\":\"Field_errorField__2KsUJ\",\"errorInfo\":\"Field_errorInfo__3IhA1\",\"textAreaWrapper\":\"Field_textAreaWrapper__21fgV\",\"inputWrapper\":\"Field_inputWrapper__3M01m\",\"passInput\":\"Field_passInput__kA2Lo\",\"rememberMe\":\"Field_rememberMe__3S1-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"Login_loginFormWrapper__2j982\",\"loginForm\":\"Login_loginForm__2dEQW\",\"errorWrapper\":\"Login_errorWrapper__2yyJR\"};","import React from \"react\";\r\nimport s from \"./Login.module.css\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Input, CreateField } from \"../common/Fields/Field\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={handleSubmit}>\r\n            {error && <div className={s.errorWrapper}>{error}</div>}\r\n            {CreateField(\"emailInput\", \"email\", \"email\", \"e-mail\", required, Input)}\r\n            {CreateField(\"passInput\", \"password\", \"password\", \"password\", required, Input)}\r\n            {CreateField(\"rememberMe\", \"checkbox\", \"rememberMe\", null, null, \"input\", \"remember me?\")}\r\n            <div>\r\n                <button>LOGIN</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = ({isAuth, userLogin}) => {\r\n    \r\n    const onSubmitLogin = (formData) => {\r\n        let { email, password, rememberMe } = { ...formData };\r\n        userLogin(email, password, rememberMe);\r\n    };\r\n\r\n    return isAuth ? (\r\n        <Redirect to=\"/profile\" />\r\n    ) : (\r\n        <div className={s.loginFormWrapper}>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmitLogin} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { userLogin } from \"../../../redux/auth_reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\n\r\nconst LoginContainer = ({ isAuth, userLogin }) => {\r\n    return <Login isAuth={isAuth} userLogin={userLogin} />;\r\n};\r\n\r\nlet MapStateToProps = ({ auth }) => ({\r\n    isAuth: auth.isAuth,\r\n});\r\n\r\nexport default connect(MapStateToProps, { userLogin })(LoginContainer);\r\n"],"sourceRoot":""}