{"version":3,"sources":["components/component/common/Fields/Field.jsx","components/component/common/Fields/Field.module.css","utils/validators/validators.js","components/component/Login/Login.module.css","components/component/Login/Login.jsx","components/component/Login/LoginContainer.jsx"],"names":["FieldWithError","hasError","meta","classStyle","props","className","s","children","errorInfo","error","Textarea","input","touched","cn","errorField","Input","CreateField","type","name","placeholder","validate","component","labelText","module","exports","required","value","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","captcha","loginForm","onSubmit","errorWrapper","src","alt","Login","isAuth","userLogin","to","loginFormWrapper","formData","email","password","rememberMe","connect","auth"],"mappings":"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","file":"static/js/7.22e542c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./Field.module.css\";\r\nimport { Field } from \"redux-form\";\r\nimport cn from \"classnames\"\r\n\r\nconst FieldWithError = ({ hasError, meta, classStyle, ...props }) => {\r\n    return (\r\n        <div className={s[classStyle]}>\r\n            {props.children}\r\n            {hasError && <span className={s.errorInfo}>{meta.error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <FieldWithError\r\n            hasError={hasError}\r\n            meta={meta}\r\n            classStyle=\"textAreaWrapper\"\r\n        >\r\n            <textarea\r\n                {...input}\r\n                {...props}\r\n                className={ cn({ [s.errorField]: hasError})}\r\n            />\r\n        </FieldWithError>\r\n    );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <FieldWithError\r\n            hasError={hasError}\r\n            meta={meta}\r\n            classStyle=\"inputWrapper\"\r\n        >\r\n            <input\r\n                {...input}\r\n                {...props}\r\n                className={cn({[s.errorField] : hasError})}\r\n            />\r\n        </FieldWithError>\r\n    );\r\n};\r\n\r\nexport const CreateField = (className, type, name, placeholder, validate, component, labelText) => (\r\n    <div className={s[className]}>\r\n        <Field type={type} name={name} placeholder={placeholder}\r\n            validate={validate} component={component} />\r\n        {labelText && <label>{labelText}</label>}\r\n    </div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorField\":\"Field_errorField__2KsUJ\",\"errorInfo\":\"Field_errorInfo__3IhA1\",\"textAreaWrapper\":\"Field_textAreaWrapper__21fgV\",\"inputWrapper\":\"Field_inputWrapper__3M01m\",\"passInput\":\"Field_passInput__kA2Lo\",\"rememberMe\":\"Field_rememberMe__3S1-H\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required!\";\r\n};\r\n\r\nexport const maxLength = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormWrapper\":\"Login_loginFormWrapper__2j982\",\"loginForm\":\"Login_loginForm__2dEQW\",\"errorWrapper\":\"Login_errorWrapper__2yyJR\",\"captcha\":\"Login_captcha__3Drkj\"};","import React from \"react\";\r\nimport s from \"./Login.module.css\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Input, CreateField } from \"../common/Fields/Field\";\r\nimport { required } from \"../../../utils/validators/validators\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LoginForm = ({ handleSubmit, error, captcha }) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={handleSubmit}>\r\n            {error && <div className={s.errorWrapper}>{error}</div>}\r\n            {CreateField(\"emailInput\", \"email\", \"email\", \"e-mail\", required, Input)}\r\n            {CreateField(\"passInput\", \"password\", \"password\", \"password\", required, Input)}\r\n            {CreateField(\"rememberMe\", \"checkbox\", \"rememberMe\", null, null, \"input\", \"remember me?\")}\r\n            {captcha && (\r\n                <div className={s.captcha}>\r\n                    <img src={captcha} alt=\"captcha\" />\r\n                    {CreateField(\"captcha\", \"text\", \"captcha\", \"Enter this symbols\", required, Input)}\r\n                </div>\r\n            )}\r\n            <div>\r\n                <button>LOGIN</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst Login = ({ isAuth, userLogin, captcha }) => {\r\n    const onSubmitLogin = (formData) => {\r\n        let { email, password, rememberMe, captcha} = { ...formData };\r\n        userLogin(email, password, rememberMe, captcha);\r\n    };\r\n\r\n    return isAuth ? (\r\n        <Redirect to=\"/profile\" />\r\n    ) : (\r\n        <div className={s.loginFormWrapper}>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmitLogin} captcha={captcha} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { userLogin } from \"../../../redux/auth_reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"./Login\";\r\n\r\nconst LoginContainer = ({ isAuth, userLogin, captcha }) => {\r\n    return <Login isAuth={isAuth} captcha={captcha} userLogin={userLogin} />;\r\n};\r\n\r\nlet MapStateToProps = ({ auth }) => ({\r\n    isAuth: auth.isAuth,\r\n    captcha: auth.captcha,\r\n});\r\n\r\nexport default connect(MapStateToProps, { userLogin })(LoginContainer);\r\n"],"sourceRoot":""}